

install rabbitmqclient


*Direct Exchange: Bu exchange tipi, mesajların doğrudan bir kuyruğa yönlendirilmesini sağlar. 
Mesajın yönlendirileceği kuyruk, mesajın "routing key" adı verilen bir özelliğine göre belirlenir.

*Fanout Exchange: Bu exchange tipi, mesajları tüm bağlı kuyruklara yönlendirir. 
Mesajın routing key özelliği önemsizdir, tüm kuyruklara eşit şekilde dağıtılır.

*Topic Exchange: Bu exchange tipi, mesajları routing key'e göre belirlenen kuyruklara yönlendirir.
Routing key, konu başlığına benzer şekilde tanımlanır ve mesajın yönlendirileceği kuyruk, routing key ile belirlenir.

*Headers Exchange: Bu exchange tipi, mesajların routing key yerine, mesajın header özelliklerine göre yönlendirilmesini sağlar.
Mesajın header özellikleri, belirli bir şartın karşılanması halinde mesajın ilgili kuyruğa yönlendirilmesini sağlar.


//Fanout Exchange
Producer yani publisher rabbbitmq ya bir mesaj gönderdiğinde excahnge tipi fanout olan excahange'e mesaj gönderir.
fanout excahnge kendisine baglı olan tüm kuyruklara mesajı gönderir.Baglı olan kuyruklarda bir filitreleme yapmaz.
Kuyrugu dinleyenler cunsomer yani subsriberlardır.
Fanout Exchange yönteminde kuyrugu consumerlar kendisi oluşturur.İş bittiginde bu kuyruklar kendiğiliğinden silinebilir.

//Direct Exchange test için ilk subsriber calışacak sonra publisher 
Producer yani publisher tarafından bir mesaj geldiğinde bu mesajı root bilgisine göre tüm kuyruklara gönderirir.
Fanout tüm kuyruklara gönderirirken Direct Exchange gelen mesajın rootunda göre gönderim işlemi yapar.


//Mesajları  kalıcı hale getirmek içi properties olusturmak gerekir(excehange durable true,queue druable true)
var properties = channel.CreateBasicProperties();
properties.Headers = headers;
properties.Persistent = true;  // dersek mesajlar kalıcı hale gelir rabbit mq restart olsa dahi mesajlar kaybolmaz.

//Mesajda datalar gönderilebilir ama büyük dataların gönderilmesi önerilmez.Aşagıda örnek verildi.
var product = new Product { Id = 1, Name = "Bilgisayar", Price = 100, Stock = 10 };
var productJsonString = JsonSerializer.Serialize(product);
channel.BasicPublish("header-exchange", string.Empty, properties, Encoding.UTF8.GetBytes(productJsonString));


